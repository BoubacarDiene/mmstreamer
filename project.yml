---

:project:
  :use_exceptions: TRUE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :test_file_prefix: test_
  :which_ceedling: gem
  :default_tasks:
    - test:all

:environment:

:extension:
  :executable: .out

:paths:
  :test:
    - +:test/**
    - -:test/support
  :source:
    - src/**
    - inc/**
    - out/staging/inc/**
  :support:
    - test/support

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :common: &common_defines []
  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

:gcov:
    :html_report: TRUE
    :html_report_type: detailed
    :html_medium_threshold: 75
    :html_high_threshold: 90
    :xml_report: FALSE

:libraries:
  :placement: :end
  :flag: "${1}"  # or "-L ${1}" for example
  :test: []
  :release: []

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - gcov
    - stdout_pretty_tests_report

:tools:
  :test_compiler:
    :executable: gcc
    :arguments:
      - -I"$": COLLECTION_PATHS_TEST_TOOLCHAIN_INCLUDE
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -D$: COLLECTION_DEFINES_TEST_AND_VENDOR
      - -std=c99 -D_GNU_SOURCE
      - -ggdb
      - -Wall -Wextra
      - -Wconversion -Wsign-conversion
      - -Wparentheses -Winit-self -Wredundant-decls
      - -Wbad-function-cast -Wcast-qual -Wcast-align
      - -Wstrict-prototypes -Wmissing-prototypes -Wshadow
      - -c ${1}
      - -o ${2}

  :test_linker:
    :executable: gcc
    :arguments:
      - ${1}
      - -Lout/staging/lib
      - -lexpat
      - -o ${2}

  :test_fixture:
    :executable: valgrind
    :arguments:
      - --track-origins=yes
      - --leak-check=full
      - --show-leak-kinds=all
      - --errors-for-leak-kinds=all
      - --error-exitcode=10
      - ${1}

:tools_gcov_linker:
  :executable: gcov
  :arguments:
    - -Lout/staging/lib -Wl,-rpath,out/staging/lib
    - -lexpat

...
